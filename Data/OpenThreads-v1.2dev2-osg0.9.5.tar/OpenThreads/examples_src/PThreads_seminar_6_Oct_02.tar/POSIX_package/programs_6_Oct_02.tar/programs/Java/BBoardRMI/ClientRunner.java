//              OneQueueProblem/ClientRunner.java
 

import java.io.*;
import Extensions.*;
 

public class ClientRunner implements Runnable {
  SingleBarrier barrier;
  LocalListener l;
  String tmp = "123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 ";

public ClientRunner(SingleBarrier b) {
  barrier= b;
}



public void run() {
  String name = Thread.currentThread().getName();
 
  l = new LocalListener();

  
  for (int j = 0; j < Client.nTopics; j++) {l.subscribe("Topic_"+j);}

  for (int i = 0; i < Client.nCalls; i++) {
    for (int j = 0; j < Client.nTopics; j++) {
      l.publish("Topic_"+j,  Client.name + tmp);
      InterruptibleThread.sleep(Client.clientDelay);
    }
  }
      InterruptibleThread.sleep(5000);
  for (int j = 0; j < Client.nTopics; j++) {l.unsubscribe("Topic_"+j);}
  barrier.barrierPost();
}
 
}
