#!/bin/sh
# Build SRB client-only interfaces

# Top directory inside tarball
TOP=SRB3_2_1e/

# exit code, per externals API
EXIT_SUCCESS=0
EXIT_BUILD_ERROR=1
EXIT_TEST_ERROR=2
EXIT_INSTALL_ERROR=3

# Get dynamic config discovered by the build system.
. $EXTERNALS_CONFIG

# The SRB make file puts the GSI libraries in the wrong order on the link 
# line. This worked in the past because the GSI libraries in Globus 4.0.1 
# had hard-coded paths to the libraries they depended on, so the linker 
# was able to sort everything out. In Globus 4.0.2, the hard-coded paths 
# aren't there, so we need to fix the link line.
patch -i gsi.patch -p0
if [ $? -ne 0 ]
then
	echo "patch failed" 1>&2
	exit $EXIT_BUILD_ERROR
fi

cd $PACKAGE_BUILD_DIR/$TOP


# Configure it
CONFIGURE_OPTS=
CONFIGURE_OPTS="$CONFIGURE_OPTS --enable-gsi-auth"
GLOBUS_LOCATION="$EXTERNALS_INSTALL_DIR/$EXT_GLOBUS_VERSION"
CONFIGURE_OPTS="$CONFIGURE_OPTS --enable-globus-location=$GLOBUS_LOCATION"
CONFIGURE_OPTS="$CONFIGURE_OPTS --enable-installdir=$PACKAGE_INSTALL_DIR"
CONFIGURE_OPTS="$CONFIGURE_OPTS --enable-secure-comm"
CONFIGURE_OPTS="$CONFIGURE_OPTS --enable-openssl-location=$EXTERNALS_INSTALL_DIR/$EXT_OPENSSL_VERSION"
echo executing ./configure $CONFIGURE_OPTS
./configure $CONFIGURE_OPTS

# Make it.
make
if [ $? -ne 0 ]
then
	echo "make failed" 1>&2
	exit $EXIT_BUILD_ERROR
fi

# The SRB package "make install" target only installs the server, not the
# client.  Who knows why!
# Install it.
#make install
#if [ $? -ne 0 ]
#then
#	echo "install failed" 1>&2
#	exit $EXIT_INSTALL_ERROR
#fi

# Just do recursive copy into the install directory.
cp -rp . $PACKAGE_INSTALL_DIR 
if [ $? -ne 0 ]
then
	echo "install failed" 1>&2
	exit $EXIT_INSTALL_ERROR
fi

exit $EXIT_SUCCESS
