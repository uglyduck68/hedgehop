all_target(libcedar.a)

CFLAGS = $(STD_C_FLAGS) $(CONFIGURE_PCRE_CFLAGS)
C_PLUS_FLAGS = $(STD_C_PLUS_FLAGS) -DHEADER_DES_LOCL_H $(CONFIGURE_PCRE_CFLAGS)
LIB = libcedar.a $(STD_LIBS) $(CONFIGURE_PCRE_LDFLAGS)

#if HAVE_EXT_OPENSSL
CONDOR_DES_OBJ = condor_crypt_3des.o
AUTH_PASSWD_OBJ = condor_auth_passwd.o
CONDOR_BLOWFISH_OBJ = condor_crypt_blowfish.o
CONDOR_CRYPT_OBJ = $(CONDOR_DES_OBJ) $(CONDOR_BLOWFISH_OBJ)
AUTH_SSL_OBJ = condor_auth_ssl.o
#endif

#if HAVE_EXT_KRB5
AUTH_KERB_OBJ = condor_auth_kerberos.o
#endif

#if HAVE_EXT_GLOBUS
AUTH_X509_OBJ = condor_auth_x509.o
#endif

CONDOR_AUTH_OBJ = condor_auth.o condor_auth_claim.o condor_auth_fs.o \
	          condor_auth_sspi.o condor_auth_anonymous.o         \
		  $(AUTH_X509_OBJ) $(AUTH_KERB_OBJ) $(AUTH_PASSWD_OBJ) $(AUTH_SSL_OBJ) ../condor_daemon_core.V6/condor_ipverify.o authentication.o

CONDOR_TYPE_OBJ = sig_num.o open_flags.o fcntl_cmd.o errno_num.o

OBJ = stream.o sock.o reli_sock.o safe_sock.o buffers.o sockCache.o \
		$(CONDOR_AUTH_OBJ) $(CONDOR_TYPE_OBJ) condor_rw.o \
		SafeMsg.o condor_crypt.o $(CONDOR_CRYPT_OBJ) CryptKey.o \
		condor_secman.o cedar_no_ckpt.o 
/*		autoTest.o manTest.o */

library_target(libcedar.a,$(OBJ))

c_plus_target(cedar.t,cedar.t.o,$(LIB))


c_plus_target(buftest,buftest.o,$(LIB))
html_target( ../condor_includes/stream.h ../condor_includes/reli_sock.h ../condor_includes/safe_sock.h ../condor_includes/sock.h )

#if HAVE_EXT_GCB
/* 
   it's a little weird to have this happen here, but because of how
   these imake rules work, they have to live in a subdirectory of src,
   they can't live in the top-level src/Imakefile itself.  since GCB
   is pretty closely tied with CEDAR, i figured this was the best
   place to put this stuff...

   NOTE: because we're copying a static vs. dynamic version here, we
   can't use the public_copy_target() to do the heavy lifting.
*/
public_copy_target($(GCB_BIN)/gcb_broker,libexec,gcb_broker,EXECUTABLE_MODE)
strip_copy_target($(GCB_BIN)/gcb_broker,libexec,gcb_broker,EXECUTABLE_MODE)
static_copy_target($(GCB_BIN)/gcb_broker_static,libexec,gcb_broker,EXECUTABLE_MODE)

release_copy_target($(GCB_BIN)/gcb_relay_server,libexec,gcb_relay_server,EXECUTABLE_MODE)
strip_copy_target($(GCB_BIN)/gcb_relay_server,libexec,gcb_relay_server,EXECUTABLE_MODE)
static_copy_target($(GCB_BIN)/gcb_relay_server_static,libexec,gcb_relay_server,EXECUTABLE_MODE)

public_copy_target($(GCB_BIN)/gcb_broker_query,sbin,gcb_broker_query,EXECUTABLE_MODE)
strip_copy_target($(GCB_BIN)/gcb_broker_query,sbin,gcb_broker_query,EXECUTABLE_MODE)
static_copy_target($(GCB_BIN)/gcb_broker_query_static,sbin,gcb_broker_query,EXECUTABLE_MODE)

#endif /* HAVE_EXT_GCB */


release:: all
stripped:: all
static:: all
testbin:: all

/* reli_sock_no_auth.o: reli_sock.cpp */
/* $(CPlusPlus) $(C_PLUS_FLAGS) -DNO_AUTHENTICATION \ */
/* -c reli_sock.cpp -o reli_sock_no_auth.o */

/* IMPORT_LINKS = ../../config/import_links */
/* import_objs(../condor_c++_util,MyString.o) */

