Purpose:

	These header files are provided for users of various services
	provided by the condor libraries.

General Goals:

	1. Be able to include any or all of these headers any number of
	times without confilcts.

	2. Provide both ANSI and K&R style prototypes.  (It is assumed
	that C++ compilers will expect the ANSI style prototypes.)

	3. Provide automatacally the `extern "c"' wrappers required by
	C++ programs for prototypes describing functions written in C.

	4. Only items needed by the users of the services should be
	defined here.  Those constructs required by the implementations
	of the services should be defined within the implementation.

Platforms:
	These headers should work on the following platforms:

	R6000_AIX32
	SPARC_SUNOS41
	HPPAR_HPUX9
	MIPS_ULTRIX42
	MIPS_ULTRIX43
	ALPHA_OSF1

Descriptions:

	condor_common.h
		Include those POSIX.1 defined headers which we expect
		most users of these services will need.

	condor_xdr.h
		Definitions needed to use the XDR portion of the SUN
		RPC protocol.

	condor_jobqueue.h
		Definiitons needed to access the condor job queue
		directly.  Note:  there is a C++ class called ProcObj
		which can read the job queue in various ways as well as
		decouple your code from dependences on specifics of
		various versions of the PROC structure - use it if you
		can.

	condor_expressions.h
		Definitions needed by users of expressions and
		contexts.  These are the old style (written in C)
		expressions and contexts.

	condor_config.h
		Definitions needed by users of the condor configuration
		files.  Note: If you need to access any pathnames of
		condor defined files or programs, get them this way.

	condor_debug.h
		Definitions needed to use the dprintf() and EXCEPT()
		routines.

	condor_constants.h
		Definitions of various constants like TRUE and FALSE
		and time values like HOUR, MINUTE, and DAY.

	condor_fdset.h
		Definitions of all things needed to use select() function, (fd_set
		in particular).  Note: there is a condor C++ class called  "selector"
		which can insulate your code from the vagaries of select() on
		various platforms, and is simpler to use than select() - no
		manipulating bit vectors.  Use that if you can.

	condor_fix_setjmp.h
		Definitions generally included in <setjmp.h>.  There is a slight
		problem with the AIX3.2 version which we fix up here.

	condor_fix_utsname.h
		Definitions generally included in <sys/utsname.h>.  There is a slight
		ANSI incompatiability in the SUNOS 3.2 version which we fix up here.

	condor_fix_timeval.h
		Definition of (BSD style) struct timeval.  This will be needed in the
		PROC structure for storing resource usage information.

	condor_mach_status.h
		Definitions needed to use the get_mach_status() function.  This is
		a "quick" method of learing the machine's status vis a vis Condor.
		The status is kept in a well known file by the condor_startd, and
		can be read by this function.  The return is coded as an integer,
		and the codes are defined here.

	condor_uid.h
		Definitions for switching effective UID between "root" and "condor".


=========================================================================

The following header files are for local use only, i.e. they are included
in other headers which are described above, and not generally intended
to be used on their own.

	_condor_fix_resource.h
		Definition of (BSD style) struct rusage.  This will also be needed
		in the PROC structure.

	_condor_fix_types.h
		Definitions of data types needed by various header files which
		expect "sys/types.h" to be included earlier.  These are non-POSIX
		types which get defined out for POSIX programs, but will nevertheless
		be needed by some header file which we need.


