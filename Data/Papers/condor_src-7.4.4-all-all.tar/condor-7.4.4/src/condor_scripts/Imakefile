all_target(condor_init condor_compile ld condor_configure)

CFLAGS = $(STD_C_FLAGS)


/*
** Target is released by version filtering
*/
#ifndef release_version_target
#define release_version_target(src,dir,dest,mode)	@@\
XCOMM Begin translation of func(release_version_target) @@\
release:: $(RELEASE_DIR)/dir/dest		@@\
							@@\
$(RELEASE_DIR)/dir/dest: src			@@\
	/bin/rm -f $(RELEASE_DIR)/dir/dest	@@\
	./condor_version_filt src $(RELEASE_DIR)/dir/dest	@@\
	chmod mode $(RELEASE_DIR)/dir/dest	@@\
XCOMM End translation of func(release_version_target)
#endif /* release_version_target */

/* 
** Stripped target is released by version filtering
*/
#ifndef strip_version_target
#define strip_version_target(src,dir,file,mode)	@@\
XCOMM Begin translation of func(strip_version_target) @@\
$(STRIP_DIR)/dir/file: src			@@\
	/bin/rm -f $(STRIP_DIR)/dir/file		@@\
	./condor_version_filt src $(STRIP_DIR)/dir/file	@@\
	chmod mode $(STRIP_DIR)/dir/file		@@\
stripped:: $(STRIP_DIR)/dir/file		@@\
XCOMM End translation of func(strip_version_target)
#endif /* strip_version_target */

/* 
** Static target is released by version filtering
*/
#ifndef static_version_target
#if HAS_STATIC
#define static_version_target(src,dir,file,mode)	@@\
XCOMM Begin translation of func(static_version_target) @@\
$(STATIC_DIR)/dir/file: src			@@\
	/bin/rm -f $(STATIC_DIR)/dir/file	@@\
	./condor_version_filt src > $(STATIC_DIR)/dir/file	@@\
	chmod mode $(STATIC_DIR)/dir/file	@@\
static:: $(STATIC_DIR)/dir/file	@@\
XCOMM End translation of func(static_version_target)
#else  /* ! HAS_STATIC */
#define static_version_target(src,dir,file,mode)	@@\
XCOMM Begin translation of func(static_version_target) @@\
static::					@@\
XCOMM End translation of func(static_version_target)
#endif  /* HAS_STATIC */
#endif /* static_version_target */

/*
** Target is released by running through a version filter
*/
#ifndef public_version_target
#define public_version_target(src,dir,dest,mode)	@@\
XCOMM Begin translation of func(public_version_target) @@\
release_version_target(src,dir,dest,mode) @@\
strip_version_target(src,dir,dest,mode) @@\
static_version_target(src,dir,dest,mode) @@\
XCOMM End translation of func(public_version_target)
#endif /* public_version_target */



public_copy_target(condor_configure,sbin,condor_configure,EXECUTABLE_MODE)
public_link_target(sbin,condor_configure,condor_install)
public_copy_target(condor_init,sbin,condor_init,EXECUTABLE_MODE)
public_version_target(condor_updates_stats,sbin,condor_updates_stats,EXECUTABLE_MODE)
public_copy_target(condor_ssh,libexec,condor_ssh,EXECUTABLE_MODE)
public_copy_target(sshd.sh,libexec,sshd.sh,EXECUTABLE_MODE)

#if IS_CLIPPED
public_copy_target(condor_compile.clipped,bin,condor_compile,EXECUTABLE_MODE)
#else 
public_copy_target(condor_compile,bin,condor_compile,EXECUTABLE_MODE)
public_copy_target(ld,lib,ld,EXECUTABLE_MODE)
public_link_target(lib,ld,real-ld)
#endif /* IS_CLIPPED */

/* TODO: this contrib hackery should go away, hopefully soon */
strip_copy_target(condor_clean_checkpoints,$(STRIP_CONTRIB)/sbin,condor_clean_checkpoints,EXECUTABLE_MODE)
static_copy_target(condor_clean_checkpoints,$(STATIC_CONTRIB)/sbin,condor_clean_checkpoints,EXECUTABLE_MODE)


#if ! IS_CLIPPED
all_symlink_target(ld,real-ld)
#endif /* ! IS_CLIPPED */

#if IS_IRIX
#if ! IS_CLIPPED
public_link_target(lib,ld,uld)
public_link_target(lib,ld,old_ld)
public_link_target(lib,ld,ld32)
#endif /* ! IS_CLIPPED */
public_symlink_target(/usr/lib/c++/c++filt,lib,c++filt)
public_symlink_target(/usr/lib/c++/c++patch,lib,c++patch)
public_symlink_target(/usr/lib/c++/cfront,lib,cfront)
public_symlink_target(/usr/lib/c++/markc++,lib,markc++)
public_symlink_target(/usr/lib/c++/ptcomp,lib,ptcomp)
public_symlink_target(/usr/lib/c++/ptlink,lib,ptlink)

#if ! IS_CLIPPED
all_symlink_target(ld,uld)
all_symlink_target(ld,old_ld)
all_symlink_target(ld,ld32)
#endif /* ! IS_CLIPPED */
all_symlink_target(/usr/lib/c++/c++filt,c++filt)
all_symlink_target(/usr/lib/c++/c++patch,c++patch)
all_symlink_target(/usr/lib/c++/cfront,cfront)
all_symlink_target(/usr/lib/c++/markc++,markc++)
all_symlink_target(/usr/lib/c++/ptcomp,ptcomp)
all_symlink_target(/usr/lib/c++/ptlink,ptlink)
#endif /* IS_IRIX */

public_copy_target(Condor.pm,lib,Condor.pm,OBJECT_MODE)

public_copy_target(condor_run,bin,condor_run,EXECUTABLE_MODE)

public_copy_target(condor_glidein,bin,condor_glidein,EXECUTABLE_MODE)

/* These Condor-C scripts are for EGEE gLite - eventually they 
   should go someplace other than BIN, but EGEE really wants 
   them there for the time being, until they can more easily
   change their packaging/deployment scripts - Todd 04/05 
   */
public_copy_target(condorc-advertiser,libexec/glite,condorc-advertiser,EXECUTABLE_MODE)
public_copy_target(condorc-authorizer,libexec/glite,condorc-authorizer,EXECUTABLE_MODE)
public_copy_target(condorc-initialize,libexec/glite,condorc-initialize,EXECUTABLE_MODE)
public_copy_target(condorc-launcher,libexec/glite,condorc-launcher,EXECUTABLE_MODE)
public_copy_target(condorc-vo-advertiser,libexec/glite,condorc-vo-advertiser,EXECUTABLE_MODE)
public_copy_target(grid_monitor.sh-glite,libexec/glite,grid_monitor.sh,EXECUTABLE_MODE)

clean::
html:
testbin:: all
