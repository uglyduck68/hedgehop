The following services are provided in condor_util_lib/util_lib.a.
Please use them rather than re-implementing this work in other Condor
code.

blankline.c: blankline(char *) returns true iff the given string is
  a blank line.
block_condor.c: Provides a means for system processes to block condor
  jobs from running regardless of other machine availability
  parameters.  Primarily intended for dumps.
ckpt_name.c: gen_ckpt_name and gen_exec_name generate names for Condor
  checkpoint files and executables.
ckpt_server_api_stubs.c: Null stubs for checkpoint server.  See
  condor_ckpt_server/server_interface.c for full stubs definition.
ckpt_util.c: utility functions used in moving and managing checkpoint
  files.
condor_config.c: config() function used to read Condor configuration
  files.
config.c: configuration functionality used with config()
cronos.c: an event manager like cron(1)
ctrace.c: process logging
detach.c: detach() background process from terminal
disk_req.c: calculate disk space needed for a job
do_connect.c: enhanced TCP and UDP connect/accept functions
dprintf.c: general logging function
dprintf_config.c: configures dprintf
env_param.c: parse an environment string
except.c: definition of _EXCEPT_, Condor's bailout function
expr.c: Condor expression parsing, evaluation, etc.
flock.c: provides BSD flock() on systems where not available -- use
  flock() for portable file locking
free_fs_blocks.c: reports the number of kbytes free for the filesystem
  where given filename resides
getmnt.c: limited simulation of getmnt() call for systems that do not
  have it.
history.c: maintains a history of condor jobs
insque.c: insque() and remque() definitions
internet.c: functions for generating internet addresses and names
job_queue.c: provides access to DBM job queue (obsolete)
lock_file.NON_POSIX.c: portable advisory file locking
ltrunc.c: remove trailing whitespace from front and back of string
machine_status.c: maintain status of local machine as integer
mkargv.c: make argc/argv from string
my_open.c: a modified popen(3)
phys_mem.c: get amount of physical RAM in megabytes
proc.c: manipulate PROC struction (obsolete?)
sign_install.c: functions for manipulating signal handlers and signal
  block mask
signames.c: maps signal numbers to signal names (portable?)
startup_info.c: display job startup info
status.c: display routines for condor_status
stub_gen: generate RPC stubs
uids.c: switch between condor and root process ids
update_rusage.c: Add ru2 rusage struct to ru1 rusage struct.
user_log.c: a facility for providing Condor users with history and
  progress information for their jobs.
virt_mem.c: calculate amount of available virtual memory
