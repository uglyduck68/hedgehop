#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use strict;
use warnings;

# truly const variables in perl
sub IDLE{1};
sub HELD{5};
sub RUNNING{2};

my $testdesc =  'cmd_status_shows-help';
my $testname = "cmd_status_shows-help";
my $corename = "cmd_status_shows-help";
my $debuglevel = 2;

print scalar localtime() . "\n";

my $mypid = $$;
my $mysaveme = $corename . ".saveme";
system("mkdir -p $mysaveme");

if($mypid == 0) {
	die "Saveme setup for test failed\n";
}

my $count = 0;
my $done = 0;
my $nattempts = 1;
my @adarray;

print "Looking for Usage lines from condor_status -help - ";
while($count < $nattempts) {
	my $masterlocal = 0;
	my $mastersched = 0;
	my $found1 = 0;
	my $cmd = "condor_status -help";
	# forth arg places stderr into passed array
	my $cmdstatus = CondorTest::runCondorTool($cmd,\@adarray,2);
    if(!$cmdstatus)
    {
        CondorTest::debug("Test failure due to Condor Tool Failure<$cmd>\n",$debuglevel);
        exit(1)
    }

	CondorTest::debug("Looking at condor_status -help \n",$debuglevel);

	# looking for.....  <Usage: condor_status>
	foreach my $line (@adarray) {
		if($line =~ /^\s*Usage:\s+condor_status.*$/) {
			CondorTest::debug("found usage: $line\n",$debuglevel);
			$done = 1;
			print "ok\n";
		} else {
			CondorTest::debug("usage: $line\n",$debuglevel);
		}
	}

	$count = $count + 1;
	sleep($count * 5);
}
if($done == 0) {
	print "bad\n";
}

CondorTest::debug("Saving things and cleaning up....\n",$debuglevel);

system("cp *cmd_status_shows-help* $mysaveme");

print scalar localtime() . "\n";

if( $done == 0 )
{
	# actual test failed but we allowed cleanup
	exit(1);
}

CondorTest::debug("cmd_status_shows-help SUCCESS\n",$debuglevel);
exit(0);
