AMAZON_GAHP = amazon_gahp
EC2_SIM = ec2_sim

PROGRAMS = $(AMAZON_GAHP) $(EC2_SIM)

all_target( $(PROGRAMS) )

CFLAGS = $(STD_C_FLAGS)

C_PLUS_FLAGS = $(STD_C_PLUS_FLAGS) -D_REENTRANT -I$(GSOAP_SHARE)/plugin
LIB = $(STD_LIBS) $(CONFIGURE_GSOAP_LDFLAGS) $(OPENSSL_LIB) -lpthread

SOAP_CLIENT_OBJ = gsoap_commands.o dom.o wsseapi.o smdevp.o soapC.o soapClient.o

AMAZON_GAHP_OBJ = PipeBuffer_no_dc.o io_loop_pthread.o amazongahp_common.o request.o amazonCommands.o  amazon_io_checkfn.o ../condor_util_lib/my_getopt.o $(SOAP_CLIENT_OBJ) 

EC2_SIM_OBJ = ec2_sim_main.o ec2_sim_impl.o soapC.o soapServer.o

public_c_plus_target($(AMAZON_GAHP),sbin,$(AMAZON_GAHP_OBJ),$(LIB))

c_plus_nowrap_target($(EC2_SIM),$(EC2_SIM_OBJ),$(CONFIGURE_GSOAP_LDFLAGS) $(GSOAP_NOSSL_LIB))

testbin_target($(EC2_SIM),755)

html:

IMPORT_LINKS = ../../config/import_links
import_objs(../condor_util_lib, setsyscalls.o )

2007-08-29.ec2.wsdl:
	wget "http://ec2.amazonaws.com/doc/2007-08-29/AmazonEC2.wsdl"

gsoap_commands.cpp: soapH.h

soapH.h soapStub.h soapC.cpp soapClient.cpp soapServer.cpp: gsoap_ec2.h
	$(SOAPCPP2) -L -w -x -I$(GSOAP_SHARE)/import gsoap_ec2.h
	patch -i soapStub.patch

wsseapi.cpp:
	cp $(GSOAP_SHARE)/plugin/wsseapi.c wsseapi.cpp
	patch -p3 < wsseapi.patch

smdevp.cpp:
	cp $(GSOAP_SHARE)/plugin/smdevp.c smdevp.cpp

clean::
	rm -f smdevp.cpp wsseapi.cpp

testbin::
