CONDOR_PROBES = condor
HAWKEYE_PROBES = hawkeye
INDIVIDUAL_PROBES = \
	condor_jobhist	\
	condor_node	\
	condor_pool	\
	condor_ckpt	\
	cvs_locks	\
	downlist	\
	df		\
	du		\
	gass_cache	\
	gdmphb		\
	grid_probe	\
	memory		\
	network_stats	\
	open_files	\
	pbs_qstat	\
	top		\
	uname		\
	uptime		\
	vmstat		\
	w		\
	who

BUILD_TOOL = ../condor_scripts/make_hawkeye_modules
FILES = README.memory_used README.network_errors README.open_files

all::

clean::
	-rm -f .release.* .hawkeye.* .static.* .stripped.*

depend:: .release.depend .hawkeye.depend .static.depend .stripped.depend


/* Release rules */
RELEASE_PROBES = $(addprefix .release., $(CONDOR_PROBES) )
RELEASE_FILES  = $(foreach F, $(FILES), $(RELEASE_DIR)/etc/examples/$F.txt)
release:: $(RELEASE_FILES) $(RELEASE_PROBES)

.release.%:
	$(BUILD_TOOL) -f $(subst .release.,,$@) --dir=$(RELEASE_DIR)/hawkeye
	touch $@
$(RELEASE_DIR)/etc/examples/README%.txt : README%
	cp $< $@

.PHONY: .release.depend
.release.depend::
	$(BUILD_TOOL) --dep condor | sed 's/:/.release:/' > .release.depend
-include .release.depend


/* Hawkeye rules */
HAWKEYE_DIR=../hawkeye_release
ALL_HAWKEYE_PROBES =\
	$(foreach F, $(HAWKEYE_PROBES) $(INDIVIDUAL_PROBES), .hawkeye.$F )
HAWKEYE_FILES = $(foreach F, $(FILES), $(HAWKEYE_DIR)/doc/$F.txt)
hawkeye:: $(HAWKEYE_FILES) $(ALL_HAWKEYE_PROBES)

.hawkeye.%:
	$(BUILD_TOOL) -f $(subst .hawkeye.,,$@) --dir=$(HAWKEYE_DIR)/hawkeye
	touch $@
$(HAWKEYE_DIR)/doc/%.txt : %
	cp $< $@

.PHONY: .hawkeye.depend
.hawkeye.depend::
	$(BUILD_TOOL) --dep --all | sed 's/:/.hawkeye:/' > .hawkeye.depend
-include .hawkeye.depend


/* Stripped rules */
STRIP_PROBES = $(addprefix .stripped., $(CONDOR_PROBES) )
STRIP_FILES  = $(foreach F, $(FILES), $(STRIP_DIR)/etc/examples/$F.txt)
stripped:: $(STRIP_FILES) $(STRIP_PROBES)

.stripped.%:
	$(BUILD_TOOL) -f $(subst .stripped.,,$@) --dir=$(STRIP_DIR)/hawkeye
	touch $@
$(STRIP_DIR)/etc/examples/README%.txt : README%
	cp $< $@

.PHONY: .stripped.depend
.stripped.depend::
	$(BUILD_TOOL) --dep condor | sed 's/:/.stripped:/' > .stripped.depend
-include .strip.depend


/* Static rules */
#if HAS_STATIC
STATIC_PROBES = $(addprefix .static., $(CONDOR_PROBES) )
STATIC_FILES = $(foreach F, $(FILES), $(STATIC_DIR)/etc/examples/$F.txt)
static:: $(STATIC_FILES) $(STATIC_PROBES)

.static.%:
	$(BUILD_TOOL) -f $(subst .static.,,$@) --dir=$(STATIC_DIR)/hawkeye
	touch $@
$(STATIC_DIR)/etc/examples/README%.txt : README%
	cp $< $@

.PHONY: .static.depend
.static.depend::
	$(BUILD_TOOL) --dep condor | sed 's/:/.static:/' > .static.depend
-include .static.depend

#else  /* ! HAS_STATIC */
static::
.PHONY: .static.depend
.depend.static::
#endif  /* HAS_STATIC */

html:
testbin:: all

