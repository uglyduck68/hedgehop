all_target(daemon_core.a)

/* Compiling daemon core without -O produces an internal compiler error
	on alpha linux with gcc 2.95.2. I turned on optimization to
	get a different instruction scheduling path to fix it. -psilord
	7/5/01 */
#if IS_LINUX
#if IS_ALPHA
FIX_BROKEN_GCC = -O
#else
FIX_BROKEN_GCC =
#endif
#endif

#if HAVE_EXT_GSOAP
GSOAP_OBJS = mimetypes.o soap_core.o 
#endif

CFLAGS = $(STD_C_FLAGS) $(CONFIGURE_PCRE_CFLAGS)
C_PLUS_FLAGS = $(STD_C_PLUS_FLAGS) $(FIX_BROKEN_GCC) $(PURIFY_FLAG) $(GSOAP_FLAGS)  $(CONFIGURE_PCRE_CFLAGS)
LIB = $(STD_LIBS) $(CONFIGURE_GSOAP_LDFLAGS) $(CONFIGURE_PCRE_LDFLAGS)

OBJ = $(GSOAP_OBJS) timer_manager.o daemon_core.o daemon_core_main.o \
  condor_perms.o \
  condor_lock_base.o condor_lock_implementation.o condor_lock_file.o \
  condor_lock.o self_monitor.o datathread.o self_draining_queue.o \
  HookClient.o HookClientMgr.o ccb_listener.o

library_target(daemon_core.a,$(OBJ))

html_target( documentation )

release:: all
stripped:: all
static:: all

#if HAVE_EXT_GSOAP
soap_core.cpp:: ../condor_includes/stdsoap2.h
../condor_includes/stdsoap2.h:
	cp $(GSOAP_DIR)/include/stdsoap2.h ../condor_includes/
	patch -p0 --fuzz=3 -d ../condor_includes < stdsoap2.h.patch
#endif

IMPORT_LINKS = ../../config/import_links
import_objs(../condor_util_lib,condor_perms.o)
import_objs(../ccb,ccb_listener.o)

testbin:: all
